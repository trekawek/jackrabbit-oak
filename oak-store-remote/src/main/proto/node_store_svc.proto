syntax = "proto3";

package org.apache.jackrabbit.oak.remote;

option java_package = "org.apache.jackrabbit.oak.remote.proto";
option java_outer_classname = "NodeStoreServices";

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "change_event.proto";
import "checkpoint.proto";
import "commit.proto";
import "node_state.proto";
import "node_state_diff.proto";
import "lease.proto";

service NodeStoreService {
    rpc GetRoot (google.protobuf.Empty) returns (NodeStateId);
    rpc Merge (stream CommitEvent) returns (NodeStateId);
    rpc Observe (stream google.protobuf.Empty) returns (stream ChangeEvent);
}

service CheckpointService {
    rpc CreateCheckpoint (CreateCheckpointRequest) returns (CheckpointId);
    rpc GetCheckpointInfo (CheckpointId) returns (CheckpointInfo);
    rpc GetCheckpointList (google.protobuf.Empty) returns (CheckpointList);
    rpc RetrieveCheckpoint (CheckpointId) returns (NodeStateId);
    rpc ReleaseCheckpoint (CheckpointId) returns (google.protobuf.BoolValue);
}

service NodeStateService {
    rpc Equals (NodeStatePathPair) returns (google.protobuf.BoolValue);
    rpc Compare (CompareNodeStateOp) returns (NodeStateDiff);
}

service LeaseService {
    rpc Acquire(google.protobuf.Empty) returns (LeaseInfo);
    rpc Renew(LeaseInfo) returns (ClusterView);
    rpc Release(LeaseInfo) returns (google.protobuf.Empty);
}

service SegmentService {
    rpc ObserveSegments (stream google.protobuf.Empty) returns (stream google.protobuf.StringValue);
}